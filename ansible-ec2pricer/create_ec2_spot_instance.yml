---
- name: Create an EC2 instance
  hosts: local
  connection: local
  gather_facts: False
  vars:
    instance_type: t2.micro
    region: us-east-1
    subnet_id: subnet-8466c4e2
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_KEY') }}"
  roles:
    - ami_id
    - security_group_id
    - key_pair
    - git_repo
    - python_exec
    - spot_instance

  # tasks:
    # - name: find ami instance-id for Amazon Linux 2 AMI
    #   ec2_ami_info:
    #     owners: 137112412989
    #     filters:
    #       description: "Amazon Linux 2 AMI 2.0.20200917.0 x86_64 HVM gp2"
    #   register: AMIs

    # - name: print out AMI_ID to terminal window
    #   debug:
    #     var: AMIs.images[0].image_id
 
    # - name: find security group id
    #   ec2_group_info:
    #     filters:
    #         group-name: ansible-node
    #   register: sgid
    
    # - name: print out security group id
    #   debug: 
    #     var: sgid.security_groups[0].group_id
    
    # - name: list all EC2 keypairs
    #   ec2_key: # is there any other function for keypair
    #     name: ansible
    #   register: keypair
    
    # - name: print out keypair
    #   debug:
    #     var: keypair.key.name
    
    # - name: git repo
    #   git:
    #     repo: https://github.com/amohan14/Project-Cloud0.git
    #     clone: yes
    #     dest: /tmp/Cloud0
    
    # - name: set permissions
    #   file:
    #     path: /tmp/Cloud0/spot_price.py
    #     mode: '0755'

    # - name: execute python script
    #   script: /tmp/Cloud0/spot_price.py
    #   args:
    #     executable: python3
    #   register: spot
    
    # - name: print spot price
    #   debug:
    #     var: spot.stdout_lines[0]
    

    # - name: Create spot instance
    #   amazon.aws.ec2:
    #     spot_price: "{{ spot.stdout_lines[0] }}"
    #     spot_wait_timeout: 600
    #     # aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY') }}"
    #     # aws_secret_key: "{{ lookup('env', 'AWS_SECRET_KEY') }}"
    #     region: "{{ region }}"
    #     keypair: "{{ keypair.key.name }}"
    #     group_id: "{{ sgid.security_groups[0].group_id }}"
    #     instance_type: "{{ instance_type }}"
    #     image: "{{ AMIs.images[0].image_id }}"
    #     spot_type: one-time # one-time/ persistent
    #     count: 1
    #     wait: yes
    #     vpc_subnet_id: "{{ subnet_id }}"
    #     state: present
    #     instance_tags:
    #       Name: "Spot instance"
    #     instance_initiated_shutdown_behavior: terminate # defaulted to 'stop'
    #     assign_public_ip: yes
    #   register: ec2_spot

    # - name: Tag instances
    #   local_action: ec2_tag resource= region={{ region }} state=present
    #   with_items: ec2_spot.instances
    #   args:
    #     tags:
    #       Spot: '{{ spot.stdout_lines[0] }}'